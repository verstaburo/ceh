/*! normalize.css v6.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}@font-face{font-family:FuturaPT-Light;font-style:normal;font-weight:300;src:local("FuturaPT-Light"),local("FuturaPT Light"),url(../fonts/FuturaPT-Light.eot) format("embedded-opentype"),url(../fonts/FuturaPT-Light.woff) format("woff"),url(../fonts/FuturaPT-Light.ttf) format("ttf"),url(../fonts/FuturaPT-Light.svg) format("svg")}button::-moz-focus-inner{border:0}:focus{outline:none}::-moz-selection{background:blue;color:#fff}::selection{background:blue;color:#fff}input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{color:#777}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#777}input::placeholder,textarea::placeholder{color:#777}input:-webkit-autofill{-webkit-text-fill-color:#000!important}input:-webkit-autofill,input:-webkit-autofill:active,input:-webkit-autofill:focus,input:-webkit-autofill:hover{transition:background-color 50000000000s ease-in-out 0s!important}body,html{margin:0;padding:0;overflow-x:hidden;width:100%;min-height:100%}body{font-family:FuturaPT-Light,sans-serif;font-size:0;box-sizing:border-box}.page__wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-height:100vh}*,:after,:before{box-sizing:inherit}img{box-sizing:content-box}footer,header,section{width:100%;float:left}h1,h2,h3,h4,h5,h6,li,p,span,ul{margin:0;padding:0}ul{list-style:none}span{font-style:inherit;font-family:inherit;font-weight:inherit}a,button,input,select,textarea{transition:all .25s ease-in-out}button,input,select,textarea{color:#000;margin:0;padding:0;border:0;border-radius:0}.contacts{display:-ms-flexbox;display:flex}.contacts p{color:#999;font-family:FuturaPT-Light,sans-serif;font-size:16px}.contacts p,.contacts p:first-child:after{display:-ms-inline-flexbox;display:inline-flex}.contacts p:first-child:after{content:"";width:1px;height:16px;background:#9a9a9a;margin:0 23px}.container,.copyright{display:block}.copyright__box{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.copyright__box span{color:#999;font-family:FuturaPT-Light,sans-serif;font-size:16px;text-transform:uppercase}.copyright__box span:first-child{margin-right:11px}.grid{font-size:0;display:block;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px}.grid:first-of-type{margin-top:-20px}.grid__col{display:inline-block;box-sizing:border-box;padding:20px 10px 0;margin:0}.grid__col_one{width:8.33333%}.grid__col_two{width:16.66667%}.grid__col_three{width:25%}.grid__col_four{width:33.33333%}.grid__col_five{width:41.66667%}.grid__col_six{width:50%}.grid__col_seven{width:58.33333%}.grid__col_eight{width:66.66667%}.grid__col_nine{width:75%}.grid__col_ten{width:83.33333%}.grid__col_eleven{width:91.66667%}.grid__col_twelve{width:100%}.grid__col_thirteen{width:108.33333%}.grid__col_fourteen{width:116.66667%}.grid__col_fifteen{width:125%}.image-bg{width:100%;height:100%;overflow:hidden;z-index:-1}.image-bg,.image-bg__img{position:absolute;top:0;left:0}.image-bg__img{right:0;bottom:0;min-width:100%;min-height:100%;width:0;margin:auto;object-fit:cover;font-family:"object-fit: cover;"}.logo{display:-ms-flexbox;display:flex;opacity:1;will-change:opacity;transition:opacity .25s ease-in-out}.logo:hover{opacity:.75}.logo__image,.navbar{width:100%;height:100%}.navbar{display:-ms-flexbox;display:flex;margin:0;padding:0}.navbar__item{margin-right:68px}.navbar__item:last-child{margin-right:0}.navbar__link{color:#333;font-size:16px;font-weight:300;text-transform:uppercase;text-decoration:none}.footer{display:block;width:100%;background-color:#fff;padding:75px 130px 85px;border-top:1px solid #333}.footer__logo{width:190px;margin:0 auto}.footer__box{margin-top:85px;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between}.footer .navbar{width:auto}.footer .navbar__link{color:#999}.header{display:block;height:240px;padding:0 130px;background-color:#fff;width:100%}.header__box{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;height:240px;-ms-flex-align:center;align-items:center}.header__logo{width:193px;height:170px}.header__navbar{display:block}.contact,.holl,.index{-ms-flex:1;flex:1}.index{margin-top:240px}.index__box{display:-ms-flexbox;display:flex;height:680px;width:100%;margin:130px 0}.index__box:first-child{margin-top:0}.index__img{position:relative;height:100%;-ms-flex-positive:1;flex-grow:1}.index__title{-ms-flex:0 0 773px;flex:0 0 773px;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.index__title p{display:block;width:162px;height:162px;border:10px solid #303030}.index__box_reverse{display:-ms-flexbox;display:flex;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.oborudovanie,.pravila,.price,.zal1,.zal2,.zal3,.zaly-oborudovanie{-ms-flex:1;flex:1}.container{width:100%;margin:0 auto}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
